<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<!-- beans 등록 -->
	<context:component-scan base-package="org.it.saan.board.controller" />
	<context:component-scan base-package="org.it.saan.board.model" />
	<context:component-scan base-package="org.it.saan.main.controller" />
	<context:component-scan base-package="org.it.saan.member.controller" />
	<context:component-scan base-package="org.it.saan.member.model" />
	<context:component-scan base-package="org.it.saan.guest.model" />
	<context:component-scan base-package="org.it.saan.guest.controller" />

	<!-- multipart 형식을 처리할 resolver -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	<!-- tiles viewResolver 등록 -->
	<bean id="tilesViewResolver"
		class="org.springframework.web.servlet.view.tiles3.TilesViewResolver"
		p:order="1" />
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<value>/WEB-INF/tiles-config.xml</value>
		</property>
	</bean>
	<!-- beanNameViewResolver -->
	<bean id="bViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0"/>
	<bean id="default"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/view/" p:suffix=".jsp" p:order="99" />
	<bean id="bean"
		class="org.springframework.web.servlet.view.BeanNameViewResolver"
		p:order="0" />
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="saan" />
		<property name="jdbcUrl" value="jdbc:oracle:thin:@192.168.10.56:1521:xe" />
		<property name="password" value="zzang" />
		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver" />
	</bean>
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate"
		p:dataSource-ref="dataSource" />
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />
	<bean id="transactionTemplate"
		class="org.springframework.transaction.support.TransactionTemplate"
		p:transactionManager-ref="transactionManager" />
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*Service" rollback-for="Exception" />
			<tx:method name="service*" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="within(org.it..*)" />
	</aop:config>
	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean id="factory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath:/*-mapper.xml" />
	</bean>
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="factory" />
	</bean>
	<bean id="memberDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="org.it.saan.member.model.MemberDao" />
		<property name="sqlSessionFactory" ref="factory" />
	</bean>
	<bean id="memberLogDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="org.it.saan.member.model.MemberLogDao" />
		<property name="sqlSessionFactory" ref="factory" />
	</bean>
	<bean id="guestDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="org.it.saan.guest.model.GuestDao" />
		<property name="sqlSessionFactory" ref="factory" />
	</bean>
	<bean id="boardDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="org.it.saan.board.model.BoardDao" />
		<property name="sqlSessionFactory" ref="factory" />
	</bean>
	<bean id="filesDao" class="org.mybatis.spring.mapper.MapperFactoryBean">
		<property name="mapperInterface" value="org.it.saan.board.model.FilesDao" />
		<property name="sqlSessionFactory" ref="factory" />
	</bean>
</beans>
